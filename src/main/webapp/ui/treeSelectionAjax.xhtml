<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.prime.com.tr/ui"
	template="../templates/ui.xhtml">

	<ui:define name="content">
		<h1 class="title ui-widget-header ui-corner-all">Tree - Ajax Selection</h1>
		<div class="entry">
			<p>Tree provides Instant Ajax Selection feature making it easy to execute custom logic on selected node.</p>
			
			<h:form prependId="false">
			
				<p:growl id="messages" showDetail="true" />

				<p:ajaxStatus style="width:16px;height:16px;">
					<f:facet name="start">
						<h:graphicImage value="../design/ajaxloading.gif" />
					</f:facet>
					
					<f:facet name="complete">
						<h:outputText value="" />
					</f:facet>
				</p:ajaxStatus>

				<p:tree value="#{treeBean.root}" var="node"
						selectionMode="single"
						selection="#{treeBean.selectedNode}"
						update="messages"
						nodeSelectListener="#{treeBean.onNodeSelect}">

					<p:treeNode>
						<h:outputText value="#{node}" />
					</p:treeNode>
				</p:tree>
				
			</h:form>
				
		<h3>Source</h3>			
			<p:tabView>
				<p:tab title="treeSelectionAjax.xhtml">
					<pre name="code" class="xml">
&lt;h:form prependId="false"&gt;

	&lt;p:growl id="messages" showDetail="true" /&gt;

	&lt;p:ajaxStatus style="width:16px;height:16px;"&gt;
		&lt;f:facet name="start"&gt;
			&lt;h:graphicImage value="../design/ajaxloading.gif" /&gt;
		&lt;/f:facet&gt;
		
		&lt;f:facet name="complete"&gt;
			&lt;h:outputText value="" /&gt;
		&lt;/f:facet&gt;
	&lt;/p:ajaxStatus&gt;

	&lt;p:tree value="\#{treeBean.root}" var="node"
			selectionMode="single"
			selection="\#{treeBean.selectedNode}"
			update="messages"
			nodeSelectListener="\#{treeBean.onNodeSelect}"&gt;

		&lt;p:treeNode&gt;
			&lt;h:outputText value="\#{node}" /&gt;
		&lt;/p:treeNode&gt;
	&lt;/p:tree&gt;
	
&lt;/h:form&gt;
					</pre>
				</p:tab>
				
				<p:tab title="TreeBean.java">
					<pre name="code" class="java">
public class TreeBean implements Serializable {
	
	private TreeNode root;
	
	private TreeNode selectedNode;

	public TreeBean() {
		root = new DefaultTreeNode("Root", null);
		TreeNode node0 = new DefaultTreeNode("Node 0", root);
		TreeNode node1 = new DefaultTreeNode("Node 1", root);
		TreeNode node2 = new DefaultTreeNode("Node 2", root);
		
		TreeNode node00 = new DefaultTreeNode("Node 0.0", node0);
		TreeNode node01 = new DefaultTreeNode("Node 0.1", node0);
		
		TreeNode node10 = new DefaultTreeNode("Node 1.0", node1);
		TreeNode node11 = new DefaultTreeNode("Node 1.1", node1);
		
		TreeNode node000 = new DefaultTreeNode("Node 0.0.0", node00);
		TreeNode node001 = new DefaultTreeNode("Node 0.0.1", node00);
		TreeNode node010 = new DefaultTreeNode("Node 0.1.0", node01);
		
		TreeNode node100 = new DefaultTreeNode("Node 1.0.0", node10);
	}

	public TreeNode getRoot() {
		return root;
	}
	
	public TreeNode getSelectedNode() {
		return selectedNode;
	}

	public void setSelectedNode(TreeNode selectedNode) {
		this.selectedNode = selectedNode;
	}
	
	public void onNodeSelect(NodeSelectEvent event) {
		FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_INFO, "Selected", event.getTreeNode().getData().toString());
		
		FacesContext.getCurrentInstance().addMessage(null, msg);
	}
}
					</pre>
				</p:tab>
			</p:tabView>
            </div>
	</ui:define>
</ui:composition>