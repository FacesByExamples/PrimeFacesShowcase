<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.prime.com.tr/ui"
	template="../templates/ui.xhtml">
	
	<ui:define name="head">
		<style type="text/css">
			.uploadifyQueueItem {
				background-color: #616D7E;
			}
			
			.fileName {
				color: #FFFFFF;
			}
		</style>
	</ui:define>
	
	<ui:define name="content">

		<h1 class="title ui-widget-header ui-corner-all">FileUpload - Skinning</h1>
		<div class="entry">
			<p>Look and feel of FileUpload can easily be changed with css and several attributes. With the customUI
			feature and the simple client side api you can build flexible UIs.</p>
						
			<h:form>
			
				<p:fileUpload fileUploadListener="#{fileUploadController.handleFileUpload}" 
						widgetVar="uploader"  height="48" width="48"
						image="/images/browse.png" cancelImage="/images/cancel.png"
						allowTypes="*.jpg;*.png;*.gif;" description="Images" customUI="true"/>
						
				<h:outputLink value="#" title="Upload" onclick="uploader.upload();" style="font-weight:bold;color:#616D7E">
					Upload Files
				</h:outputLink>	
							
			</h:form>
						
			<h3>Source</h3>
			<pre name="code" class="xml">
&lt;p:fileUpload widgetVar="uploader" height="48" width="48"
	fileUploadListener="\#{fileUploadController.handleFileUpload}"
	image="/images/browse.png" cancelImage="/images/cancel.png"
	allowTypes="*.jpg;*.png;*.gif;" description="Images" customUI="true"/&gt;
						
&lt;h:outputLink value="#" title="Upload" onclick="uploader.upload();" 
	style="font-weight:bold;color:#616D7E"&gt;
	Upload Files
&lt;/h:outputLink&gt;
			</pre>
						
			<pre name="code" class="java">
public class FileUploadController {
	
	private Logger logger = LoggerFactory.getLogger(FileUploadController.class);

	public void handleFileUpload(FileUploadEvent event) {
		logger.info("Uploaded: {}", event.getFile().getFileName());

		FacesMessage msg = new FacesMessage("Succesful", event.getFile().getFileName() + " is uploaded.");
		FacesContext.getCurrentInstance().addMessage(null, msg);
	}
}
			</pre>
						
		</div>
				
	</ui:define>
</ui:composition>
