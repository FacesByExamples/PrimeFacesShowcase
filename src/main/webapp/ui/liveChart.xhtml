<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.prime.com.tr/ui"
                template="../templates/ui.xhtml">

    <ui:define name="head">
        <script type="text/javascript">
            var chartStyle = {
                padding:20,
                legend: {
                    display:"right",
                    spacing:10
                }
            };
        </script>
    </ui:define>

    <ui:define name="content">

        <h1 class="title ui-widget-header ui-corner-all">Charts - Live Data</h1>
        <div class="entry">
            <h:form>
                <p>This example displays an ongoing election between two candidates. Votes are updated live and displayed on a pie chart.</p>

                <p:pieChart id="votes" value="#{chartBean.votes}" var="vote"
                            live="true" refreshInterval="3000" categoryField="#{vote.candidate}" dataField="#{vote.count}"
                            style="chartStyle"/>

            </h:form>

            <h3>Source</h3>
            <p:tabView>
                <p:tab title="liveChart.xhtml">
                <pre name="code" class="xml">
&lt;h:form&gt;

    &lt;p:pieChart id="votes" value="\#{chartBean.votes}" var="vote"
			live="true" refreshInterval="3000"
			categoryField="\#{vote.candidate}" dataField="\#{vote.count}"
			style="chartStyle"/&gt;
&lt;/h:form&gt;
            </pre>
                </p:tab>

                <p:tab title="ChartBean.java">
            <pre name="code" class="java">
public class ChartBean implements Serializable {

	private List&lt;Vote&gt; votes;

	private String message;

	public ChartBean() {
		votes = new ArrayList&lt;Vote&gt;();
		votes.add(new Vote("Candidate 1", 100));
		votes.add(new Vote("Candidate 2", 100));
	}

	public List&lt;Vote&gt; getVotes() {
		int random1 = (int)(Math.random() * 1000);
		int random2 = (int)(Math.random() * 1000);

		votes.get(0).add(random1);
		votes.get(1).add(random2);

		return votes;
	}
}
            </pre>
                </p:tab>

            </p:tabView>
            


        </div>

    </ui:define>
</ui:composition>
